# Default values for webservice.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: latest

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

liveness:
   enabled: true
   port:  123
   path: /health
   initialDelaySeconds: 20
   periodSeconds: 1
   timeoutSeconds: 20

readiness:
   enabled: false     
   port: 122
   path: /ready
   initialDelaySeconds: 20
   periodSeconds: 1
   timeoutSeconds: 20

   #creating config map   
configMap:
 enabled: true
 data:
  foo: bar
  hello: world


  #using configmap
ConfigmapDeployment:  
      - key: test   

initContainers:
    enable: false
    data:    
    - name: init-myservice
      image: busybox:1.28
      command: ['sh', '-c', "until nslookup myservice.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for myservice; sleep 2; done"]
    - name: init-mydb
      image: busybox:1.28
      command: ['sh', '-c', "until nslookup mydb.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for mydb; sleep 2; done"]


command:
       enable: false
       data:
        - ./podinfo
        - --port=9898
        - --port-metrics=9797
        - --grpc-port=9999
ports:
    - name: http
      containerPort: 80
      protocol: tcp

env:
    - name: cluster.name
      value: k8s-logs
    - name: NAMESPACE
      valueFrom:
         fieldRef:
           fieldPath: metadata.namespace 
    - name: node.name
      valueFrom:
         fieldRef:
           fieldPath: metadata.name
          #- name: discovery.seed_hosts
           # value: "es-cluster-0.elasticsearch"
          #- name: cluster.initial_master_nodes
           # value: "es-cluster-0"
          #- name: ES_JAVA_OPTS
           # value: "-Xms248m -Xmx248m"
          #- name: PROCESSORS
           # valueFrom:
            #  resourceFieldRef:
             #  resource: limits.cpu

commands:
        enabled: false     


annotations:
        prometheus.io/port: "9560"
        prometheus.io/scrape: "true"

pv:
  enabled: false
  storage:  2Gi
  accessmode: ReadWriteOnce
  pvr: Reclaim
  path : /home/ubuntu/mnt/  #path for pv node
  key: app         # label for pv node
  nodevalue: test  #value of label for pv node

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  data:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: 
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi

hpa:
  enabled: false
  minReplicas: 1
  maxReplicas: 4
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

#virtual-service entry
vs:
  enable: false
  host: "*"
  gateway: dev-gateway
  prefix: nginx
  destination:
     port: 80

nodeSelector: {}

tolerations: []

affinity: {}
